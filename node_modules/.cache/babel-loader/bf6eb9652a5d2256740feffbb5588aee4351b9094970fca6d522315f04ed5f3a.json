{"ast":null,"code":"//On met toutes les fonctions qui permettent de récuperer les données de l'API\nconst BASE_URL = \"https://api.staging.bsport.io\";\nconst API_URL = BASE_URL + \"/api/v1/\";\nconst BASE_COMP_ID = 6;\nexport function getOffersForCompForXDay(_ref) {\n  let {\n    minDate,\n    maxDate,\n    compID = BASE_COMP_ID\n  } = _ref;\n  // Cette fonction renvoie les offres d'une compagnie pour une période donnée\n  const url = `${API_URL}offer/?company=${compID}&min_date=${minDate}&max_date=${maxDate}`;\n  const data = fetch(url).then(response => response.json()).then(data => {\n    return data;\n  });\n  return data;\n}\n\n// export function getCoachName(coachID){\n//     // Cette fonction renvoie le nom du coach\n//     const url = `${API_URL}associated_coach/?company=${BASE_COMP_ID}&id__in=${coachID}`\n//     return new Promise((resolve, reject) => {\n//         const data = fetch(url)\n//         .then(response => response.json())\n//         .then(data => {\n//             resolve(data[0]?.name)\n//         })\n//     })\n// }\n\nexport function getCoachName(coachID) {\n  // Cette fonction renvoie le nom du coach\n  const url = `${API_URL}associated_coach/?company=${BASE_COMP_ID}&id__in=${coachID}`;\n  const data = fetch(url).then(response => response.json()).then(data => {\n    return data[0].name;\n  });\n  return data;\n}\nexport function getNameActivity(metaActivityId) {\n  // Cette fonction renvoie le nom de l'activité\n  const url = `${API_URL}meta-activity/?id__in=${metaActivityId}&company=${BASE_COMP_ID}`;\n  return new Promise((resolve, reject) => {\n    const data = fetch(url).then(response => response.json()).then(data => {\n      var _data$result;\n      resolve(data === null || data === void 0 ? void 0 : (_data$result = data.result) === null || _data$result === void 0 ? void 0 : _data$result.name);\n    });\n  });\n}","map":{"version":3,"names":["BASE_URL","API_URL","BASE_COMP_ID","getOffersForCompForXDay","minDate","maxDate","compID","url","data","fetch","then","response","json","getCoachName","coachID","name","getNameActivity","metaActivityId","Promise","resolve","reject","result"],"sources":["/Users/bouchafaa/Documents/stage/calendrier/src/api/helper.js"],"sourcesContent":["//On met toutes les fonctions qui permettent de récuperer les données de l'API\nconst BASE_URL = \"https://api.staging.bsport.io\"\nconst API_URL = BASE_URL + \"/api/v1/\"\nconst BASE_COMP_ID = 6\n\nexport function getOffersForCompForXDay({minDate,maxDate,compID=BASE_COMP_ID}){\n    // Cette fonction renvoie les offres d'une compagnie pour une période donnée\n    const url = `${API_URL}offer/?company=${compID}&min_date=${minDate}&max_date=${maxDate}`\n    const data = fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        return data;\n    })\n    return data;\n}\n\n// export function getCoachName(coachID){\n//     // Cette fonction renvoie le nom du coach\n//     const url = `${API_URL}associated_coach/?company=${BASE_COMP_ID}&id__in=${coachID}`\n//     return new Promise((resolve, reject) => {\n//         const data = fetch(url)\n//         .then(response => response.json())\n//         .then(data => {\n//             resolve(data[0]?.name)\n//         })\n//     })\n// }\n\nexport function getCoachName(coachID){\n    // Cette fonction renvoie le nom du coach\n    const url = `${API_URL}associated_coach/?company=${BASE_COMP_ID}&id__in=${coachID}`\n    const data = fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        return data[0].name;\n    })\n    return data;\n}\n\nexport function getNameActivity(metaActivityId){\n    // Cette fonction renvoie le nom de l'activité\n    const url = `${API_URL}meta-activity/?id__in=${metaActivityId}&company=${BASE_COMP_ID}`\n    return new Promise((resolve, reject) => {\n        const data = fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            resolve(data?.result?.name)\n        })\n    })\n}\n\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,+BAA+B;AAChD,MAAMC,OAAO,GAAGD,QAAQ,GAAG,UAAU;AACrC,MAAME,YAAY,GAAG,CAAC;AAEtB,OAAO,SAASC,uBAAuB,OAAuC;EAAA,IAAtC;IAACC,OAAO;IAACC,OAAO;IAACC,MAAM,GAACJ;EAAY,CAAC;EACzE;EACA,MAAMK,GAAG,GAAI,GAAEN,OAAQ,kBAAiBK,MAAO,aAAYF,OAAQ,aAAYC,OAAQ,EAAC;EACxF,MAAMG,IAAI,GAAGC,KAAK,CAACF,GAAG,CAAC,CACtBG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACF,IAAI,IAAI;IACV,OAAOA,IAAI;EACf,CAAC,CAAC;EACF,OAAOA,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASK,YAAY,CAACC,OAAO,EAAC;EACjC;EACA,MAAMP,GAAG,GAAI,GAAEN,OAAQ,6BAA4BC,YAAa,WAAUY,OAAQ,EAAC;EACnF,MAAMN,IAAI,GAAGC,KAAK,CAACF,GAAG,CAAC,CACtBG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACF,IAAI,IAAI;IACV,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACO,IAAI;EACvB,CAAC,CAAC;EACF,OAAOP,IAAI;AACf;AAEA,OAAO,SAASQ,eAAe,CAACC,cAAc,EAAC;EAC3C;EACA,MAAMV,GAAG,GAAI,GAAEN,OAAQ,yBAAwBgB,cAAe,YAAWf,YAAa,EAAC;EACvF,OAAO,IAAIgB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMZ,IAAI,GAAGC,KAAK,CAACF,GAAG,CAAC,CACtBG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACF,IAAI,IAAI;MAAA;MACVW,OAAO,CAACX,IAAI,aAAJA,IAAI,uCAAJA,IAAI,CAAEa,MAAM,iDAAZ,aAAcN,IAAI,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}