{"ast":null,"code":"var _jsxFileName = \"/Users/bouchafaa/Documents/stage/calendrier/src/component/schedule/Schedule.js\";\nimport { weekdaysShort } from 'moment';\nimport React from 'react';\nimport Day from './Day';\nimport Modal from './Modal';\nimport \"./Schedule.css\";\nimport moment from 'moment';\n\n//lien du template html/css : https://codyhouse.co/gem/schedule-template\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule(_ref) {\n  let {\n    eventsUnOrdered\n  } = _ref;\n  //on trie les events par jour\n  const week = [{\n    name: \"Monday\",\n    events: []\n  },\n  // { name: \"Tuesday\", events: eventsUnOrdered.filter(event => event.dateStart.getDay() === \"Tue\") },\n  {\n    name: \"Tuesday\",\n    events: []\n  }, {\n    name: \"Wednesday\",\n    events: []\n  }, {\n    name: \"Thursday\",\n    events: []\n  }, {\n    name: \"Friday\",\n    events: []\n  }, {\n    name: \"Saturday\",\n    events: []\n  }, {\n    name: \"Sunday\",\n    events: []\n  }];\n  eventsUnOrdered.map(event => {\n    const day = event.day;\n    week.find(week => week.name === day).events = [...week.find(week => week.name === \"Monday\").events, event];\n  });\n\n  // eventsUnOrdered.map((event) =>{\n  //     const day = moment(event.startTime).format(\"dddd\")\n  //     week.map((week)=>{week.name===day?\n  //         week.events : event\n  //         console.log(week.events)\n  //         console.log(event)\n  //     })\n  // })\n\n  const segmentileHoursMax = 23;\n  const segmentileHoursMin = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cd-schedule margin-top-lg margin-bottom-lg js-cd-schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cd-schedule__timeline\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.from({\n          length: segmentileHoursMax - segmentileHoursMin\n        }, k => k + segmentileHoursMin).map((hour, hourKey) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 53\n            }, this)\n          }, `hour-${hourKey}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cd-schedule__events\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: week.map((day, i) => {\n          return /*#__PURE__*/_jsxDEV(Day, {\n            name: day.name,\n            events: day.events\n          }, `day-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["weekdaysShort","React","Day","Modal","moment","Schedule","eventsUnOrdered","week","name","events","map","event","day","find","segmentileHoursMax","segmentileHoursMin","Array","from","length","k","hour","hourKey","i"],"sources":["/Users/bouchafaa/Documents/stage/calendrier/src/component/schedule/Schedule.js"],"sourcesContent":["import { weekdaysShort } from 'moment'\nimport React from 'react'\nimport Day from './Day'\nimport Modal from './Modal'\nimport \"./Schedule.css\"\nimport moment from 'moment';\n\n//lien du template html/css : https://codyhouse.co/gem/schedule-template\n\nexport default function Schedule( { eventsUnOrdered } ) { \n\n\n\n\n    \n    \n    //on trie les events par jour\n    const week = [\n        { name: \"Monday\", events: []},\n        // { name: \"Tuesday\", events: eventsUnOrdered.filter(event => event.dateStart.getDay() === \"Tue\") },\n        { name: \"Tuesday\", events: []},\n        { name: \"Wednesday\", events: [] },\n        { name: \"Thursday\", events: [] },\n        { name: \"Friday\", events: [] },\n        { name: \"Saturday\", events: [] },\n        { name: \"Sunday\", events: [] },\n    ]\n\n\n    eventsUnOrdered.map((event) => {\n        const day = event.day\n        week.find(week => week.name === day).events = [...week.find(week => week.name === \"Monday\").events, event]\n    })\n\n    // eventsUnOrdered.map((event) =>{\n    //     const day = moment(event.startTime).format(\"dddd\")\n    //     week.map((week)=>{week.name===day?\n    //         week.events : event\n    //         console.log(week.events)\n    //         console.log(event)\n    //     })\n    // })\n\n    const segmentileHoursMax = 23\n    const segmentileHoursMin = 0 \n\n  return (\n    <div className=\"cd-schedule margin-top-lg margin-bottom-lg js-cd-schedule\">\n        <div className=\"cd-schedule__timeline\">\n            <ul>\n                {Array.from({ length: segmentileHoursMax - segmentileHoursMin }, (k) => k + segmentileHoursMin).map((hour, hourKey) => {\n                    return (\n                        <li key={`hour-${hourKey}`}><span>{`${hour}:00`}</span></li>\n                    )\n                })}\n            </ul>\n        </div>\n        <div className=\"cd-schedule__events\">\n            <ul>\n                {week.map((day, i) => {\n                    return <Day\n                            key={`day-${i}`}\n                            name={day.name}\n                            events={day.events}\n                        />\n                })}\n            </ul>\n        </div>\n        <Modal />\n\n    </div>\n  )\n}"],"mappings":";AAAA,SAASA,aAAa,QAAQ,QAAQ;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,QAAQ;;AAE3B;AAAA;AAEA,eAAe,SAASC,QAAQ,OAAwB;EAAA,IAAtB;IAAEC;EAAgB,CAAC;EAOjD;EACA,MAAMC,IAAI,GAAG,CACT;IAAEC,IAAI,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAE,CAAC;EAC7B;EACA;IAAED,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAE,CAAC,EAC9B;IAAED,IAAI,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAG,CAAC,EACjC;IAAED,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAG,CAAC,EAChC;IAAED,IAAI,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC9B;IAAED,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAG,CAAC,EAChC;IAAED,IAAI,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAG,CAAC,CACjC;EAGDH,eAAe,CAACI,GAAG,CAAEC,KAAK,IAAK;IAC3B,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG;IACrBL,IAAI,CAACM,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKI,GAAG,CAAC,CAACH,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACM,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,CAAC,CAACC,MAAM,EAAEE,KAAK,CAAC;EAC9G,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,kBAAkB,GAAG,EAAE;EAC7B,MAAMC,kBAAkB,GAAG,CAAC;EAE9B,oBACE;IAAK,SAAS,EAAC,2DAA2D;IAAA,wBACtE;MAAK,SAAS,EAAC,uBAAuB;MAAA,uBAClC;QAAA,UACKC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAEJ,kBAAkB,GAAGC;QAAmB,CAAC,EAAGI,CAAC,IAAKA,CAAC,GAAGJ,kBAAkB,CAAC,CAACL,GAAG,CAAC,CAACU,IAAI,EAAEC,OAAO,KAAK;UACnH,oBACI;YAAA,uBAA4B;cAAA,UAAQ,GAAED,IAAK;YAAI;cAAA;cAAA;cAAA;YAAA;UAAQ,GAA7C,QAAOC,OAAQ,EAAC;YAAA;YAAA;YAAA;UAAA,QAAkC;QAEpE,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACH,eACN;MAAK,SAAS,EAAC,qBAAqB;MAAA,uBAChC;QAAA,UACKd,IAAI,CAACG,GAAG,CAAC,CAACE,GAAG,EAAEU,CAAC,KAAK;UAClB,oBAAO,QAAC,GAAG;YAEH,IAAI,EAAEV,GAAG,CAACJ,IAAK;YACf,MAAM,EAAEI,GAAG,CAACH;UAAO,GAFb,OAAMa,CAAE,EAAC;YAAA;YAAA;YAAA;UAAA,QAGjB;QACV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACH,eACN,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEP;AAEV;AAAC,KA/DuBjB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}